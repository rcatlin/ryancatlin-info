<?php

namespace MyProject\Bundle\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
    public function findAll($order = 'DESC')
    {
        return $this->createQueryBuilder('a')
            ->orderBy('a.createdAt', $order)
            ->getQuery()
            ->execute()
        ;
    }

    public function findAllActiveArticles($offset, $limit, $order = 'DESC')
    {
        $qb = $this->createQueryBuilder('a');

        $eq = $qb->expr()->eq(
            'a.active',
            '1'
        );

        return $qb->where($eq)
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            ->orderBy('a.createdAt', $order)
            ->getQuery()
            ->execute()
        ;
    }

    public function findActiveBySlug($slug)
    {
        $qb = $this->createQueryBuilder('a');

        $slug = $qb->expr()
            ->eq(
                'a.slug',
                sprintf("'%s'", $slug)
            )
        ;
        $active = $qb->expr()
            ->eq(
                'a.active',
                '1'
            )
        ;

        return $qb->where($slug)
            ->andWhere($active)
            ->getQuery()
            ->getSingleResult()
        ;
    }

    public function findActiveByTag(Tag $tag, $offset, $limit, $order = 'DESC')
    {
        $qb = $this->createQueryBuilder('a')
            ->join('a.tags', 't')
        ;

        $id = $qb->expr()->in(
            't.id',
            array(
                $tag->getId()
            )
        );

        $active = $qb->expr()->eq(
            'a.active',
            '1'
        );

        return $qb->where($id)
            ->andWhere($active)
            ->setFirstResult($offset)
            ->setMaxResults($limit)
            ->orderBy('a.createdAt', $order)
            ->getQuery()
            ->execute()
        ;
    }
}
